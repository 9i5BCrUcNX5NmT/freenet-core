{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://network-monitor/./node_modules/flatbuffers/mjs/constants.js","webpack://network-monitor/./node_modules/flatbuffers/mjs/utils.js","webpack://network-monitor/./node_modules/flatbuffers/mjs/encoding.js","webpack://network-monitor/./node_modules/flatbuffers/mjs/byte-buffer.js","webpack://network-monitor/./node_modules/flatbuffers/mjs/builder.js","webpack://network-monitor/./src/app.ts","webpack://network-monitor/./src/generated/topology.ts","webpack://network-monitor/./src/generated/topology/added-connection.ts","webpack://network-monitor/./src/generated/topology/controller-response.ts","webpack://network-monitor/./src/generated/topology/error.ts","webpack://network-monitor/./src/generated/topology/ok.ts","webpack://network-monitor/./src/generated/topology/peer-change-type.ts","webpack://network-monitor/./src/generated/topology/peer-change.ts","webpack://network-monitor/./src/generated/topology/removed-connection.ts","webpack://network-monitor/./src/generated/topology/response.ts","webpack://network-monitor/./src/topology.ts","webpack://network-monitor/webpack/bootstrap","webpack://network-monitor/webpack/runtime/define property getters","webpack://network-monitor/webpack/runtime/hasOwnProperty shorthand","webpack://network-monitor/webpack/runtime/make namespace object","webpack://network-monitor/webpack/startup"],"sourcesContent":["export const SIZEOF_SHORT = 2;\nexport const SIZEOF_INT = 4;\nexport const FILE_IDENTIFIER_LENGTH = 4;\nexport const SIZE_PREFIX_LENGTH = 4;\n","export const int32 = new Int32Array(2);\nexport const float32 = new Float32Array(int32.buffer);\nexport const float64 = new Float64Array(int32.buffer);\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n","export var Encoding;\n(function (Encoding) {\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\n})(Encoding || (Encoding = {}));\n","import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants.js\";\nimport { int32, isLittleEndian, float32, float64 } from \"./utils.js\";\nimport { Encoding } from \"./encoding.js\";\nexport class ByteBuffer {\n    /**\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\n     */\n    constructor(bytes_) {\n        this.bytes_ = bytes_;\n        this.position_ = 0;\n        this.text_decoder_ = new TextDecoder();\n    }\n    /**\n     * Create and allocate a new ByteBuffer with a given size.\n     */\n    static allocate(byte_size) {\n        return new ByteBuffer(new Uint8Array(byte_size));\n    }\n    clear() {\n        this.position_ = 0;\n    }\n    /**\n     * Get the underlying `Uint8Array`.\n     */\n    bytes() {\n        return this.bytes_;\n    }\n    /**\n     * Get the buffer's position.\n     */\n    position() {\n        return this.position_;\n    }\n    /**\n     * Set the buffer's position.\n     */\n    setPosition(position) {\n        this.position_ = position;\n    }\n    /**\n     * Get the buffer's capacity.\n     */\n    capacity() {\n        return this.bytes_.length;\n    }\n    readInt8(offset) {\n        return this.readUint8(offset) << 24 >> 24;\n    }\n    readUint8(offset) {\n        return this.bytes_[offset];\n    }\n    readInt16(offset) {\n        return this.readUint16(offset) << 16 >> 16;\n    }\n    readUint16(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n    }\n    readInt32(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n    }\n    readUint32(offset) {\n        return this.readInt32(offset) >>> 0;\n    }\n    readInt64(offset) {\n        return BigInt.asIntN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readUint64(offset) {\n        return BigInt.asUintN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readFloat32(offset) {\n        int32[0] = this.readInt32(offset);\n        return float32[0];\n    }\n    readFloat64(offset) {\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n        return float64[0];\n    }\n    writeInt8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeUint8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeInt16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeUint16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeInt32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeUint32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeInt64(offset, value) {\n        this.writeInt32(offset, Number(BigInt.asIntN(32, value)));\n        this.writeInt32(offset + 4, Number(BigInt.asIntN(32, value >> BigInt(32))));\n    }\n    writeUint64(offset, value) {\n        this.writeUint32(offset, Number(BigInt.asUintN(32, value)));\n        this.writeUint32(offset + 4, Number(BigInt.asUintN(32, value >> BigInt(32))));\n    }\n    writeFloat32(offset, value) {\n        float32[0] = value;\n        this.writeInt32(offset, int32[0]);\n    }\n    writeFloat64(offset, value) {\n        float64[0] = value;\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\n    }\n    /**\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n     * schema does not include a file_identifier (likely points at padding or the\n     * start of a the root vtable).\n     */\n    getBufferIdentifier() {\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\n            FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\n        }\n        let result = \"\";\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\n        }\n        return result;\n    }\n    /**\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\n     * field is not present.\n     */\n    __offset(bb_pos, vtable_offset) {\n        const vtable = bb_pos - this.readInt32(bb_pos);\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n    }\n    /**\n     * Initialize any Table-derived type to point to the union at the given offset.\n     */\n    __union(t, offset) {\n        t.bb_pos = offset + this.readInt32(offset);\n        t.bb = this;\n        return t;\n    }\n    /**\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n     * This allocates a new string and converts to wide chars upon each access.\n     *\n     * To avoid the conversion to string, pass Encoding.UTF8_BYTES as the\n     * \"optionalEncoding\" argument. This is useful for avoiding conversion when\n     * the data will just be packaged back up in another FlatBuffer later on.\n     *\n     * @param offset\n     * @param opt_encoding Defaults to UTF16_STRING\n     */\n    __string(offset, opt_encoding) {\n        offset += this.readInt32(offset);\n        const length = this.readInt32(offset);\n        offset += SIZEOF_INT;\n        const utf8bytes = this.bytes_.subarray(offset, offset + length);\n        if (opt_encoding === Encoding.UTF8_BYTES)\n            return utf8bytes;\n        else\n            return this.text_decoder_.decode(utf8bytes);\n    }\n    /**\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\n     * if a string then return a new one\n     *\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\n     * makes the behaviour of __union_with_string different compared to __union\n     */\n    __union_with_string(o, offset) {\n        if (typeof o === 'string') {\n            return this.__string(offset);\n        }\n        return this.__union(o, offset);\n    }\n    /**\n     * Retrieve the relative offset stored at \"offset\"\n     */\n    __indirect(offset) {\n        return offset + this.readInt32(offset);\n    }\n    /**\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector(offset) {\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\n    }\n    /**\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector_len(offset) {\n        return this.readInt32(offset + this.readInt32(offset));\n    }\n    __has_identifier(ident) {\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: file identifier must be length ' +\n                FILE_IDENTIFIER_LENGTH);\n        }\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * A helper function for generating list for obj api\n     */\n    createScalarList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val);\n            }\n        }\n        return ret;\n    }\n    /**\n     * A helper function for generating list for obj api\n     * @param listAccessor function that accepts an index and return data at that index\n     * @param listLength listLength\n     * @param res result list\n     */\n    createObjList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val.unpack());\n            }\n        }\n        return ret;\n    }\n}\n","import { ByteBuffer } from \"./byte-buffer.js\";\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants.js\";\nexport class Builder {\n    /**\n     * Create a FlatBufferBuilder.\n     */\n    constructor(opt_initial_size) {\n        /** Minimum alignment encountered so far. */\n        this.minalign = 1;\n        /** The vtable for the current table. */\n        this.vtable = null;\n        /** The amount of fields we're actually using. */\n        this.vtable_in_use = 0;\n        /** Whether we are currently serializing a table. */\n        this.isNested = false;\n        /** Starting offset of the current struct/table. */\n        this.object_start = 0;\n        /** List of offsets of all vtables. */\n        this.vtables = [];\n        /** For the current vector being built. */\n        this.vector_num_elems = 0;\n        /** False omits default values from the serialized data */\n        this.force_defaults = false;\n        this.string_maps = null;\n        this.text_encoder = new TextEncoder();\n        let initial_size;\n        if (!opt_initial_size) {\n            initial_size = 1024;\n        }\n        else {\n            initial_size = opt_initial_size;\n        }\n        /**\n         * @type {ByteBuffer}\n         * @private\n         */\n        this.bb = ByteBuffer.allocate(initial_size);\n        this.space = initial_size;\n    }\n    clear() {\n        this.bb.clear();\n        this.space = this.bb.capacity();\n        this.minalign = 1;\n        this.vtable = null;\n        this.vtable_in_use = 0;\n        this.isNested = false;\n        this.object_start = 0;\n        this.vtables = [];\n        this.vector_num_elems = 0;\n        this.force_defaults = false;\n        this.string_maps = null;\n    }\n    /**\n     * In order to save space, fields that are set to their default value\n     * don't get serialized into the buffer. Forcing defaults provides a\n     * way to manually disable this optimization.\n     *\n     * @param forceDefaults true always serializes default values\n     */\n    forceDefaults(forceDefaults) {\n        this.force_defaults = forceDefaults;\n    }\n    /**\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n     * called finish(). The actual data starts at the ByteBuffer's current position,\n     * not necessarily at 0.\n     */\n    dataBuffer() {\n        return this.bb;\n    }\n    /**\n     * Get the bytes representing the FlatBuffer. Only call this after you've\n     * called finish().\n     */\n    asUint8Array() {\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n    }\n    /**\n     * Prepare to write an element of `size` after `additional_bytes` have been\n     * written, e.g. if you write a string, you need to align such the int length\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\n     * you need to do is alignment, `additional_bytes` will be 0.\n     *\n     * @param size This is the of the new element to write\n     * @param additional_bytes The padding size\n     */\n    prep(size, additional_bytes) {\n        // Track the biggest thing we've ever aligned to.\n        if (size > this.minalign) {\n            this.minalign = size;\n        }\n        // Find the amount of alignment needed such that `size` is properly\n        // aligned after `additional_bytes`\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n        // Reallocate the buffer if needed.\n        while (this.space < align_size + size + additional_bytes) {\n            const old_buf_size = this.bb.capacity();\n            this.bb = Builder.growByteBuffer(this.bb);\n            this.space += this.bb.capacity() - old_buf_size;\n        }\n        this.pad(align_size);\n    }\n    pad(byte_size) {\n        for (let i = 0; i < byte_size; i++) {\n            this.bb.writeInt8(--this.space, 0);\n        }\n    }\n    writeInt8(value) {\n        this.bb.writeInt8(this.space -= 1, value);\n    }\n    writeInt16(value) {\n        this.bb.writeInt16(this.space -= 2, value);\n    }\n    writeInt32(value) {\n        this.bb.writeInt32(this.space -= 4, value);\n    }\n    writeInt64(value) {\n        this.bb.writeInt64(this.space -= 8, value);\n    }\n    writeFloat32(value) {\n        this.bb.writeFloat32(this.space -= 4, value);\n    }\n    writeFloat64(value) {\n        this.bb.writeFloat64(this.space -= 8, value);\n    }\n    /**\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int8` to add the buffer.\n     */\n    addInt8(value) {\n        this.prep(1, 0);\n        this.writeInt8(value);\n    }\n    /**\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int16` to add the buffer.\n     */\n    addInt16(value) {\n        this.prep(2, 0);\n        this.writeInt16(value);\n    }\n    /**\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int32` to add the buffer.\n     */\n    addInt32(value) {\n        this.prep(4, 0);\n        this.writeInt32(value);\n    }\n    /**\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int64` to add the buffer.\n     */\n    addInt64(value) {\n        this.prep(8, 0);\n        this.writeInt64(value);\n    }\n    /**\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float32` to add the buffer.\n     */\n    addFloat32(value) {\n        this.prep(4, 0);\n        this.writeFloat32(value);\n    }\n    /**\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float64` to add the buffer.\n     */\n    addFloat64(value) {\n        this.prep(8, 0);\n        this.writeFloat64(value);\n    }\n    addFieldInt8(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt8(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt16(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt16(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt64(voffset, value, defaultValue) {\n        if (this.force_defaults || value !== defaultValue) {\n            this.addInt64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat64(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldOffset(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addOffset(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n     */\n    addFieldStruct(voffset, value, defaultValue) {\n        if (value != defaultValue) {\n            this.nested(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structures are always stored inline, they need to be created right\n     * where they're used.  You'll get this assertion failure if you\n     * created it elsewhere.\n     */\n    nested(obj) {\n        if (obj != this.offset()) {\n            throw new TypeError('FlatBuffers: struct must be serialized inline.');\n        }\n    }\n    /**\n     * Should not be creating any other object, string or vector\n     * while an object is being constructed\n     */\n    notNested() {\n        if (this.isNested) {\n            throw new TypeError('FlatBuffers: object serialization must not be nested.');\n        }\n    }\n    /**\n     * Set the current vtable at `voffset` to the current location in the buffer.\n     */\n    slot(voffset) {\n        if (this.vtable !== null)\n            this.vtable[voffset] = this.offset();\n    }\n    /**\n     * @returns Offset relative to the end of the buffer.\n     */\n    offset() {\n        return this.bb.capacity() - this.space;\n    }\n    /**\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\n     * the end of the new buffer (since we build the buffer backwards).\n     *\n     * @param bb The current buffer with the existing data\n     * @returns A new byte buffer with the old data copied\n     * to it. The data is located at the end of the buffer.\n     *\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n     * it a uint8Array we need to suppress the type check:\n     * @suppress {checkTypes}\n     */\n    static growByteBuffer(bb) {\n        const old_buf_size = bb.capacity();\n        // Ensure we don't grow beyond what fits in an int.\n        if (old_buf_size & 0xC0000000) {\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n        }\n        const new_buf_size = old_buf_size << 1;\n        const nbb = ByteBuffer.allocate(new_buf_size);\n        nbb.setPosition(new_buf_size - old_buf_size);\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n        return nbb;\n    }\n    /**\n     * Adds on offset, relative to where it will be written.\n     *\n     * @param offset The offset to add.\n     */\n    addOffset(offset) {\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\n    }\n    /**\n     * Start encoding a new object in the buffer.  Users will not usually need to\n     * call this directly. The FlatBuffers compiler will generate helper methods\n     * that call this method internally.\n     */\n    startObject(numfields) {\n        this.notNested();\n        if (this.vtable == null) {\n            this.vtable = [];\n        }\n        this.vtable_in_use = numfields;\n        for (let i = 0; i < numfields; i++) {\n            this.vtable[i] = 0; // This will push additional elements as needed\n        }\n        this.isNested = true;\n        this.object_start = this.offset();\n    }\n    /**\n     * Finish off writing the object that is under construction.\n     *\n     * @returns The offset to the object inside `dataBuffer`\n     */\n    endObject() {\n        if (this.vtable == null || !this.isNested) {\n            throw new Error('FlatBuffers: endObject called without startObject');\n        }\n        this.addInt32(0);\n        const vtableloc = this.offset();\n        // Trim trailing zeroes.\n        let i = this.vtable_in_use - 1;\n        // eslint-disable-next-line no-empty\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\n        const trimmed_size = i + 1;\n        // Write out the current vtable.\n        for (; i >= 0; i--) {\n            // Offset relative to the start of the table.\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n        }\n        const standard_fields = 2; // The fields below:\n        this.addInt16(vtableloc - this.object_start);\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\n        this.addInt16(len);\n        // Search for an existing vtable that matches the current one.\n        let existing_vtable = 0;\n        const vt1 = this.space;\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\n            const vt2 = this.bb.capacity() - this.vtables[i];\n            if (len == this.bb.readInt16(vt2)) {\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n                        continue outer_loop;\n                    }\n                }\n                existing_vtable = this.vtables[i];\n                break;\n            }\n        }\n        if (existing_vtable) {\n            // Found a match:\n            // Remove the current vtable.\n            this.space = this.bb.capacity() - vtableloc;\n            // Point table to existing vtable.\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n        }\n        else {\n            // No match:\n            // Add the location of the current vtable to the list of vtables.\n            this.vtables.push(this.offset());\n            // Point table to current vtable.\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n        }\n        this.isNested = false;\n        return vtableloc;\n    }\n    /**\n     * Finalize a buffer, poiting to the given `root_table`.\n     */\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\n        if (opt_file_identifier) {\n            const file_identifier = opt_file_identifier;\n            this.prep(this.minalign, SIZEOF_INT +\n                FILE_IDENTIFIER_LENGTH + size_prefix);\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\n                throw new TypeError('FlatBuffers: file identifier must be length ' +\n                    FILE_IDENTIFIER_LENGTH);\n            }\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n                this.writeInt8(file_identifier.charCodeAt(i));\n            }\n        }\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\n        this.addOffset(root_table);\n        if (size_prefix) {\n            this.addInt32(this.bb.capacity() - this.space);\n        }\n        this.bb.setPosition(this.space);\n    }\n    /**\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\n     */\n    finishSizePrefixed(root_table, opt_file_identifier) {\n        this.finish(root_table, opt_file_identifier, true);\n    }\n    /**\n     * This checks a required field has been set in a given table that has\n     * just been constructed.\n     */\n    requiredField(table, field) {\n        const table_start = this.bb.capacity() - table;\n        const vtable_start = table_start - this.bb.readInt32(table_start);\n        const ok = field < this.bb.readInt16(vtable_start) &&\n            this.bb.readInt16(vtable_start + field) != 0;\n        // If this fails, the caller will show what field needs to be set.\n        if (!ok) {\n            throw new TypeError('FlatBuffers: field ' + field + ' must be set');\n        }\n    }\n    /**\n     * Start a new array/vector of objects.  Users usually will not call\n     * this directly. The FlatBuffers compiler will create a start/end\n     * method for vector types in generated code.\n     *\n     * @param elem_size The size of each element in the array\n     * @param num_elems The number of elements in the array\n     * @param alignment The alignment of the array\n     */\n    startVector(elem_size, num_elems, alignment) {\n        this.notNested();\n        this.vector_num_elems = num_elems;\n        this.prep(SIZEOF_INT, elem_size * num_elems);\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n    }\n    /**\n     * Finish off the creation of an array and all its elements. The array must be\n     * created with `startVector`.\n     *\n     * @returns The offset at which the newly created array\n     * starts.\n     */\n    endVector() {\n        this.writeInt32(this.vector_num_elems);\n        return this.offset();\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\n     * already been seen, we return the offset of the already written string\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createSharedString(s) {\n        if (!s) {\n            return 0;\n        }\n        if (!this.string_maps) {\n            this.string_maps = new Map();\n        }\n        if (this.string_maps.has(s)) {\n            return this.string_maps.get(s);\n        }\n        const offset = this.createString(s);\n        this.string_maps.set(s, offset);\n        return offset;\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createString(s) {\n        if (s === null || s === undefined) {\n            return 0;\n        }\n        let utf8;\n        if (s instanceof Uint8Array) {\n            utf8 = s;\n        }\n        else {\n            utf8 = this.text_encoder.encode(s);\n        }\n        this.addInt8(0);\n        this.startVector(1, utf8.length, 1);\n        this.bb.setPosition(this.space -= utf8.length);\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n            bytes[offset++] = utf8[i];\n        }\n        return this.endVector();\n    }\n    /**\n     * A helper function to pack an object\n     *\n     * @returns offset of obj\n     */\n    createObjectOffset(obj) {\n        if (obj === null) {\n            return 0;\n        }\n        if (typeof obj === 'string') {\n            return this.createString(obj);\n        }\n        else {\n            return obj.pack(this);\n        }\n    }\n    /**\n     * A helper function to pack a list of object\n     *\n     * @returns list of offsets of each non null object\n     */\n    createObjectOffsetList(list) {\n        const ret = [];\n        for (let i = 0; i < list.length; ++i) {\n            const val = list[i];\n            if (val !== null) {\n                ret.push(this.createObjectOffset(val));\n            }\n            else {\n                throw new TypeError('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\n            }\n        }\n        return ret;\n    }\n    createStructOffsetList(list, startFunc) {\n        startFunc(this, list.length);\n        this.createObjectOffsetList(list.slice().reverse());\n        return this.endVector();\n    }\n}\n","import * as flatbuffers from \"flatbuffers\";\nimport * as fbTopology from \"./generated/topology\";\nimport { handleChange } from \"./topology\";\n\nconst socket = new WebSocket(\"ws://127.0.0.1:55010/pull-stats/\");\n\nsocket.onmessage = handleMessage;\n\nfunction handleMessage(event: MessageEvent) {\n  const buf = new flatbuffers.ByteBuffer(new Uint8Array(event.data));\n  const peerChange = fbTopology.PeerChange.getRootAsPeerChange(buf);\n  handleChange(peerChange);\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nexport { AddedConnection, AddedConnectionT } from './topology/added-connection';\nexport { ControllerResponse, ControllerResponseT } from './topology/controller-response';\nexport { Error, ErrorT } from './topology/error';\nexport { Ok, OkT } from './topology/ok';\nexport { PeerChange, PeerChangeT } from './topology/peer-change';\nexport { PeerChangeType } from './topology/peer-change-type';\nexport { RemovedConnection, RemovedConnectionT } from './topology/removed-connection';\nexport { Response } from './topology/response';\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n\n\nexport class AddedConnection implements flatbuffers.IUnpackableObject<AddedConnectionT> {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n  __init(i:number, bb:flatbuffers.ByteBuffer):AddedConnection {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsAddedConnection(bb:flatbuffers.ByteBuffer, obj?:AddedConnection):AddedConnection {\n  return (obj || new AddedConnection()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsAddedConnection(bb:flatbuffers.ByteBuffer, obj?:AddedConnection):AddedConnection {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new AddedConnection()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nfrom():string|null\nfrom(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nfrom(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nfromLocation():number {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nto():string|null\nto(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nto(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\ntoLocation():number {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;\n}\n\nstatic startAddedConnection(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n}\n\nstatic addFrom(builder:flatbuffers.Builder, fromOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, fromOffset, 0);\n}\n\nstatic addFromLocation(builder:flatbuffers.Builder, fromLocation:number) {\n  builder.addFieldFloat64(1, fromLocation, 0.0);\n}\n\nstatic addTo(builder:flatbuffers.Builder, toOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, toOffset, 0);\n}\n\nstatic addToLocation(builder:flatbuffers.Builder, toLocation:number) {\n  builder.addFieldFloat64(3, toLocation, 0.0);\n}\n\nstatic endAddedConnection(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  builder.requiredField(offset, 4) // from\n  builder.requiredField(offset, 8) // to\n  return offset;\n}\n\nstatic createAddedConnection(builder:flatbuffers.Builder, fromOffset:flatbuffers.Offset, fromLocation:number, toOffset:flatbuffers.Offset, toLocation:number):flatbuffers.Offset {\n  AddedConnection.startAddedConnection(builder);\n  AddedConnection.addFrom(builder, fromOffset);\n  AddedConnection.addFromLocation(builder, fromLocation);\n  AddedConnection.addTo(builder, toOffset);\n  AddedConnection.addToLocation(builder, toLocation);\n  return AddedConnection.endAddedConnection(builder);\n}\n\nunpack(): AddedConnectionT {\n  return new AddedConnectionT(\n    this.from(),\n    this.fromLocation(),\n    this.to(),\n    this.toLocation()\n  );\n}\n\n\nunpackTo(_o: AddedConnectionT): void {\n  _o.from = this.from();\n  _o.fromLocation = this.fromLocation();\n  _o.to = this.to();\n  _o.toLocation = this.toLocation();\n}\n}\n\nexport class AddedConnectionT implements flatbuffers.IGeneratedObject {\nconstructor(\n  public from: string|Uint8Array|null = null,\n  public fromLocation: number = 0.0,\n  public to: string|Uint8Array|null = null,\n  public toLocation: number = 0.0\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const from = (this.from !== null ? builder.createString(this.from!) : 0);\n  const to = (this.to !== null ? builder.createString(this.to!) : 0);\n\n  return AddedConnection.createAddedConnection(builder,\n    from,\n    this.fromLocation,\n    to,\n    this.toLocation\n  );\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { Error, ErrorT } from '../topology/error';\nimport { Ok, OkT } from '../topology/ok';\nimport { Response, unionToResponse, unionListToResponse } from '../topology/response';\n\n\nexport class ControllerResponse implements flatbuffers.IUnpackableObject<ControllerResponseT> {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n  __init(i:number, bb:flatbuffers.ByteBuffer):ControllerResponse {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsControllerResponse(bb:flatbuffers.ByteBuffer, obj?:ControllerResponse):ControllerResponse {\n  return (obj || new ControllerResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsControllerResponse(bb:flatbuffers.ByteBuffer, obj?:ControllerResponse):ControllerResponse {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new ControllerResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nresponseType():Response {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : Response.NONE;\n}\n\nresponse<T extends flatbuffers.Table>(obj:any):any|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n}\n\nstatic startControllerResponse(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addResponseType(builder:flatbuffers.Builder, responseType:Response) {\n  builder.addFieldInt8(0, responseType, Response.NONE);\n}\n\nstatic addResponse(builder:flatbuffers.Builder, responseOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, responseOffset, 0);\n}\n\nstatic endControllerResponse(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  builder.requiredField(offset, 6) // response\n  return offset;\n}\n\nstatic createControllerResponse(builder:flatbuffers.Builder, responseType:Response, responseOffset:flatbuffers.Offset):flatbuffers.Offset {\n  ControllerResponse.startControllerResponse(builder);\n  ControllerResponse.addResponseType(builder, responseType);\n  ControllerResponse.addResponse(builder, responseOffset);\n  return ControllerResponse.endControllerResponse(builder);\n}\n\nunpack(): ControllerResponseT {\n  return new ControllerResponseT(\n    this.responseType(),\n    (() => {\n      const temp = unionToResponse(this.responseType(), this.response.bind(this));\n      if(temp === null) { return null; }\n      return temp.unpack()\n  })()\n  );\n}\n\n\nunpackTo(_o: ControllerResponseT): void {\n  _o.responseType = this.responseType();\n  _o.response = (() => {\n      const temp = unionToResponse(this.responseType(), this.response.bind(this));\n      if(temp === null) { return null; }\n      return temp.unpack()\n  })();\n}\n}\n\nexport class ControllerResponseT implements flatbuffers.IGeneratedObject {\nconstructor(\n  public responseType: Response = Response.NONE,\n  public response: ErrorT|OkT|null = null\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const response = builder.createObjectOffset(this.response);\n\n  return ControllerResponse.createControllerResponse(builder,\n    this.responseType,\n    response\n  );\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n\n\nexport class Error implements flatbuffers.IUnpackableObject<ErrorT> {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n  __init(i:number, bb:flatbuffers.ByteBuffer):Error {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsError(bb:flatbuffers.ByteBuffer, obj?:Error):Error {\n  return (obj || new Error()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsError(bb:flatbuffers.ByteBuffer, obj?:Error):Error {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Error()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nmessage():string|null\nmessage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nmessage(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nstatic startError(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, messageOffset, 0);\n}\n\nstatic endError(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  builder.requiredField(offset, 4) // message\n  return offset;\n}\n\nstatic createError(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Error.startError(builder);\n  Error.addMessage(builder, messageOffset);\n  return Error.endError(builder);\n}\n\nunpack(): ErrorT {\n  return new ErrorT(\n    this.message()\n  );\n}\n\n\nunpackTo(_o: ErrorT): void {\n  _o.message = this.message();\n}\n}\n\nexport class ErrorT implements flatbuffers.IGeneratedObject {\nconstructor(\n  public message: string|Uint8Array|null = null\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const message = (this.message !== null ? builder.createString(this.message!) : 0);\n\n  return Error.createError(builder,\n    message\n  );\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n\n\nexport class Ok implements flatbuffers.IUnpackableObject<OkT> {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n  __init(i:number, bb:flatbuffers.ByteBuffer):Ok {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsOk(bb:flatbuffers.ByteBuffer, obj?:Ok):Ok {\n  return (obj || new Ok()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsOk(bb:flatbuffers.ByteBuffer, obj?:Ok):Ok {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Ok()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nmessage():string|null\nmessage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nmessage(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nstatic startOk(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, messageOffset, 0);\n}\n\nstatic endOk(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createOk(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Ok.startOk(builder);\n  Ok.addMessage(builder, messageOffset);\n  return Ok.endOk(builder);\n}\n\nunpack(): OkT {\n  return new OkT(\n    this.message()\n  );\n}\n\n\nunpackTo(_o: OkT): void {\n  _o.message = this.message();\n}\n}\n\nexport class OkT implements flatbuffers.IGeneratedObject {\nconstructor(\n  public message: string|Uint8Array|null = null\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const message = (this.message !== null ? builder.createString(this.message!) : 0);\n\n  return Ok.createOk(builder,\n    message\n  );\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { AddedConnection, AddedConnectionT } from '../topology/added-connection';\nimport { Error, ErrorT } from '../topology/error';\nimport { RemovedConnection, RemovedConnectionT } from '../topology/removed-connection';\n\n\nexport enum PeerChangeType {\n  NONE = 0,\n  AddedConnection = 1,\n  RemovedConnection = 2,\n  Error = 3\n}\n\nexport function unionToPeerChangeType(\n  type: PeerChangeType,\n  accessor: (obj:AddedConnection|Error|RemovedConnection) => AddedConnection|Error|RemovedConnection|null\n): AddedConnection|Error|RemovedConnection|null {\n  switch(PeerChangeType[type]) {\n    case 'NONE': return null; \n    case 'AddedConnection': return accessor(new AddedConnection())! as AddedConnection;\n    case 'RemovedConnection': return accessor(new RemovedConnection())! as RemovedConnection;\n    case 'Error': return accessor(new Error())! as Error;\n    default: return null;\n  }\n}\n\nexport function unionListToPeerChangeType(\n  type: PeerChangeType, \n  accessor: (index: number, obj:AddedConnection|Error|RemovedConnection) => AddedConnection|Error|RemovedConnection|null, \n  index: number\n): AddedConnection|Error|RemovedConnection|null {\n  switch(PeerChangeType[type]) {\n    case 'NONE': return null; \n    case 'AddedConnection': return accessor(index, new AddedConnection())! as AddedConnection;\n    case 'RemovedConnection': return accessor(index, new RemovedConnection())! as RemovedConnection;\n    case 'Error': return accessor(index, new Error())! as Error;\n    default: return null;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { AddedConnection, AddedConnectionT } from '../topology/added-connection';\nimport { Error, ErrorT } from '../topology/error';\nimport { PeerChangeType, unionToPeerChangeType, unionListToPeerChangeType } from '../topology/peer-change-type';\nimport { RemovedConnection, RemovedConnectionT } from '../topology/removed-connection';\n\n\nexport class PeerChange implements flatbuffers.IUnpackableObject<PeerChangeT> {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n  __init(i:number, bb:flatbuffers.ByteBuffer):PeerChange {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsPeerChange(bb:flatbuffers.ByteBuffer, obj?:PeerChange):PeerChange {\n  return (obj || new PeerChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsPeerChange(bb:flatbuffers.ByteBuffer, obj?:PeerChange):PeerChange {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new PeerChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\ncurrentState(index: number, obj?:AddedConnection):AddedConnection|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? (obj || new AddedConnection()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\ncurrentStateLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nchangeType():PeerChangeType {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : PeerChangeType.NONE;\n}\n\nchange<T extends flatbuffers.Table>(obj:any):any|null {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n}\n\nstatic startPeerChange(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n}\n\nstatic addCurrentState(builder:flatbuffers.Builder, currentStateOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, currentStateOffset, 0);\n}\n\nstatic createCurrentStateVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startCurrentStateVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic addChangeType(builder:flatbuffers.Builder, changeType:PeerChangeType) {\n  builder.addFieldInt8(1, changeType, PeerChangeType.NONE);\n}\n\nstatic addChange(builder:flatbuffers.Builder, changeOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, changeOffset, 0);\n}\n\nstatic endPeerChange(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createPeerChange(builder:flatbuffers.Builder, currentStateOffset:flatbuffers.Offset, changeType:PeerChangeType, changeOffset:flatbuffers.Offset):flatbuffers.Offset {\n  PeerChange.startPeerChange(builder);\n  PeerChange.addCurrentState(builder, currentStateOffset);\n  PeerChange.addChangeType(builder, changeType);\n  PeerChange.addChange(builder, changeOffset);\n  return PeerChange.endPeerChange(builder);\n}\n\nunpack(): PeerChangeT {\n  return new PeerChangeT(\n    this.bb!.createObjList<AddedConnection, AddedConnectionT>(this.currentState.bind(this), this.currentStateLength()),\n    this.changeType(),\n    (() => {\n      const temp = unionToPeerChangeType(this.changeType(), this.change.bind(this));\n      if(temp === null) { return null; }\n      return temp.unpack()\n  })()\n  );\n}\n\n\nunpackTo(_o: PeerChangeT): void {\n  _o.currentState = this.bb!.createObjList<AddedConnection, AddedConnectionT>(this.currentState.bind(this), this.currentStateLength());\n  _o.changeType = this.changeType();\n  _o.change = (() => {\n      const temp = unionToPeerChangeType(this.changeType(), this.change.bind(this));\n      if(temp === null) { return null; }\n      return temp.unpack()\n  })();\n}\n}\n\nexport class PeerChangeT implements flatbuffers.IGeneratedObject {\nconstructor(\n  public currentState: (AddedConnectionT)[] = [],\n  public changeType: PeerChangeType = PeerChangeType.NONE,\n  public change: AddedConnectionT|ErrorT|RemovedConnectionT|null = null\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const currentState = PeerChange.createCurrentStateVector(builder, builder.createObjectOffsetList(this.currentState));\n  const change = builder.createObjectOffset(this.change);\n\n  return PeerChange.createPeerChange(builder,\n    currentState,\n    this.changeType,\n    change\n  );\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n\n\nexport class RemovedConnection implements flatbuffers.IUnpackableObject<RemovedConnectionT> {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n  __init(i:number, bb:flatbuffers.ByteBuffer):RemovedConnection {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsRemovedConnection(bb:flatbuffers.ByteBuffer, obj?:RemovedConnection):RemovedConnection {\n  return (obj || new RemovedConnection()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsRemovedConnection(bb:flatbuffers.ByteBuffer, obj?:RemovedConnection):RemovedConnection {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new RemovedConnection()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nat():string|null\nat(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nat(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nfrom():string|null\nfrom(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nfrom(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nstatic startRemovedConnection(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addAt(builder:flatbuffers.Builder, atOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, atOffset, 0);\n}\n\nstatic addFrom(builder:flatbuffers.Builder, fromOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, fromOffset, 0);\n}\n\nstatic endRemovedConnection(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  builder.requiredField(offset, 4) // at\n  builder.requiredField(offset, 6) // from\n  return offset;\n}\n\nstatic createRemovedConnection(builder:flatbuffers.Builder, atOffset:flatbuffers.Offset, fromOffset:flatbuffers.Offset):flatbuffers.Offset {\n  RemovedConnection.startRemovedConnection(builder);\n  RemovedConnection.addAt(builder, atOffset);\n  RemovedConnection.addFrom(builder, fromOffset);\n  return RemovedConnection.endRemovedConnection(builder);\n}\n\nunpack(): RemovedConnectionT {\n  return new RemovedConnectionT(\n    this.at(),\n    this.from()\n  );\n}\n\n\nunpackTo(_o: RemovedConnectionT): void {\n  _o.at = this.at();\n  _o.from = this.from();\n}\n}\n\nexport class RemovedConnectionT implements flatbuffers.IGeneratedObject {\nconstructor(\n  public at: string|Uint8Array|null = null,\n  public from: string|Uint8Array|null = null\n){}\n\n\npack(builder:flatbuffers.Builder): flatbuffers.Offset {\n  const at = (this.at !== null ? builder.createString(this.at!) : 0);\n  const from = (this.from !== null ? builder.createString(this.from!) : 0);\n\n  return RemovedConnection.createRemovedConnection(builder,\n    at,\n    from\n  );\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { Error, ErrorT } from '../topology/error';\nimport { Ok, OkT } from '../topology/ok';\n\n\nexport enum Response {\n  NONE = 0,\n  Error = 1,\n  Ok = 2\n}\n\nexport function unionToResponse(\n  type: Response,\n  accessor: (obj:Error|Ok) => Error|Ok|null\n): Error|Ok|null {\n  switch(Response[type]) {\n    case 'NONE': return null; \n    case 'Error': return accessor(new Error())! as Error;\n    case 'Ok': return accessor(new Ok())! as Ok;\n    default: return null;\n  }\n}\n\nexport function unionListToResponse(\n  type: Response, \n  accessor: (index: number, obj:Error|Ok) => Error|Ok|null, \n  index: number\n): Error|Ok|null {\n  switch(Response[type]) {\n    case 'NONE': return null; \n    case 'Error': return accessor(index, new Error())! as Error;\n    case 'Ok': return accessor(index, new Ok())! as Ok;\n    default: return null;\n  }\n}\n","import * as fbTopology from \"./generated/topology\";\n\nexport let peers: PeerList = {};\n\ninterface PeerList {\n  [id: string]: Peer;\n}\n\ninterface Peer {\n  id: string;\n  currentLocation: number;\n  connections: Connection[];\n  history: ChangeInfo[];\n  locationHistory: { location: number; timestamp: number }[];\n}\n\ninterface Connection {\n  id: string;\n  location: number;\n}\n\ninterface ChangeInfo {\n  type: \"Added\" | \"Removed\";\n  from: Connection;\n  to: Connection;\n  timestamp: number;\n}\n\nexport function handleChange(peerChange: fbTopology.PeerChange) {\n  const unpacked = peerChange.unpack();\n  try {\n    switch (unpacked.changeType) {\n      case fbTopology.PeerChangeType.AddedConnection:\n        handleAddedConnection(unpacked.change as fbTopology.AddedConnectionT);\n        break;\n      case fbTopology.PeerChangeType.RemovedConnection:\n        handleRemovedConnection(\n          unpacked.change as fbTopology.RemovedConnectionT\n        );\n        break;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  updateTable();\n}\n\nexport function handleAddedConnection(peerChange: fbTopology.AddedConnectionT) {\n  const added = peerChange;\n  const fromAdded = added.from!.toString();\n  const toAdded = added.to!.toString();\n\n  const fromConnection: Connection = {\n    id: fromAdded,\n    location: added.fromLocation,\n  };\n\n  const toConnection: Connection = {\n    id: toAdded,\n    location: added.toLocation,\n  };\n\n  if (peers[fromAdded]) {\n    if (peers[fromAdded].currentLocation !== added.fromLocation) {\n      peers[fromAdded].locationHistory.push({\n        location: peers[fromAdded].currentLocation,\n        timestamp: Date.now(),\n      });\n      peers[fromAdded].currentLocation = added.fromLocation;\n    }\n\n    if (peers[toAdded].currentLocation !== added.toLocation) {\n      peers[toAdded].locationHistory.push({\n        location: peers[toAdded].currentLocation,\n        timestamp: Date.now(),\n      });\n      peers[toAdded].currentLocation = added.toLocation;\n    }\n\n    peers[fromAdded].connections.push(toConnection);\n  } else {\n    peers[fromAdded] = {\n      id: fromAdded,\n      currentLocation: added.fromLocation,\n      connections: [toConnection],\n      history: [],\n      locationHistory: [],\n    };\n  }\n\n  if (peers[toAdded]) {\n    peers[toAdded].connections.push(fromConnection);\n  } else {\n    peers[toAdded] = {\n      id: toAdded,\n      currentLocation: added.toLocation,\n      connections: [fromConnection],\n      history: [],\n      locationHistory: [],\n    };\n  }\n\n  const changeInfo: ChangeInfo = {\n    type: \"Added\",\n    from: fromConnection,\n    to: toConnection,\n    timestamp: Date.now(),\n  };\n\n  peers[fromAdded].history.push(changeInfo);\n  peers[toAdded].history.push(changeInfo);\n}\n\nexport function handleRemovedConnection(\n  peerChange: fbTopology.RemovedConnectionT\n) {\n  const removed = peerChange;\n  const fromRemoved = removed.from!.toString();\n  const atRemoved = removed.at!.toString();\n  const index = peers[fromRemoved].connections.findIndex(\n    (connection) => connection.id === atRemoved\n  );\n\n  if (index > -1) {\n    peers[fromRemoved].connections.splice(index, 1);\n  }\n\n  const reverseIndex = peers[atRemoved].connections.findIndex(\n    (connection: Connection) => connection.id === fromRemoved\n  );\n\n  if (reverseIndex > -1) {\n    peers[atRemoved].connections.splice(reverseIndex, 1);\n  }\n\n  const changeInfo: ChangeInfo = {\n    type: \"Removed\",\n    from: {\n      id: fromRemoved,\n      location: peers[fromRemoved].currentLocation,\n    },\n    to: {\n      id: atRemoved,\n      location: peers[atRemoved].currentLocation,\n    },\n    timestamp: Date.now(),\n  };\n\n  peers[fromRemoved].history.push(changeInfo);\n  peers[atRemoved].history.push(changeInfo);\n}\n\nfunction updateTable() {\n  const table = document.getElementById(\"peers-table\");\n\n  if (table) {\n    table.innerHTML = \"\";\n\n    for (const id in peers) {\n      const row = document.createElement(\"tr\");\n      row.onclick = () => showConnections(peers[id]);\n      row.onclick = () => displayHistory(peers[id]);\n\n      const cell = document.createElement(\"td\");\n      cell.textContent = id;\n      row.appendChild(cell);\n\n      table.appendChild(row);\n    }\n  }\n}\n\nexport function showConnections(peer: Peer) {\n  const id = peer.id;\n  const connections: Connection[] = peer.connections ?? [];\n\n  const overlayDiv = document.getElementById(\"overlay-div\");\n\n  if (overlayDiv) {\n    overlayDiv.innerHTML = \"\";\n\n    const headerSection = document.createElement(\"section\");\n    headerSection.classList.add(\"header-section\");\n\n    const idLocation = document.createElement(\"h2\");\n    idLocation.textContent = `Peer ID: ${id}, Location: ${\n      peer.currentLocation ?? \"\"\n    }`;\n    headerSection.appendChild(idLocation);\n\n    overlayDiv.appendChild(headerSection);\n\n    const tableSection = document.createElement(\"section\");\n    tableSection.classList.add(\"table-section\");\n\n    const table = document.createElement(\"table\");\n\n    table.classList.add(\"peers-table\");\n\n    // Create the table header row\n    const headerRow = document.createElement(\"tr\");\n    const idHeader = document.createElement(\"th\");\n    idHeader.textContent = \"Peer ID\";\n    const locationHeader = document.createElement(\"th\");\n    locationHeader.textContent = \"Location\";\n    headerRow.appendChild(idHeader);\n    headerRow.appendChild(locationHeader);\n    table.appendChild(headerRow);\n\n    // Create and append the table rows for all peers\n    connections.forEach((connection) => {\n      const row = document.createElement(\"tr\");\n      const idCell = document.createElement(\"td\");\n      idCell.textContent = connection.id.toString() ?? \"\";\n      const locationCell = document.createElement(\"td\");\n      locationCell.textContent = connection.location.toString() ?? \"\";\n      row.appendChild(idCell);\n      row.appendChild(locationCell);\n      table.appendChild(row);\n    });\n\n    // Append the table to the table section\n    tableSection.appendChild(table);\n\n    // Append the table section to the overlay div\n    overlayDiv.appendChild(tableSection);\n  }\n}\n\nfunction displayHistory(peer: Peer): string {\n  let historyHTML = '<table class=\"table is-fullwidth is-striped\">';\n  historyHTML +=\n    \"<thead><tr><th>Timestamp</th><th>Type</th><th>From</th><th>To</th></tr></thead><tbody>\";\n\n  historyHTML += peer.history\n    .map((change) => {\n      return `<tr><td>${change.timestamp}</td><td>${change.type}</td><td>${change.from.id}</td><td>${change.to.id}</td></tr>`;\n    })\n    .join(\"\");\n\n  historyHTML += \"</tbody></table>\";\n\n  return historyHTML;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(752);\n"],"names":["SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Encoding","ByteBuffer","constructor","bytes_","this","position_","text_decoder_","TextDecoder","allocate","byte_size","clear","bytes","position","setPosition","capacity","length","readInt8","offset","readUint8","readInt16","readUint16","readInt32","readUint32","readInt64","BigInt","asIntN","readUint64","asUintN","readFloat32","readFloat64","writeInt8","value","writeUint8","writeInt16","writeUint16","writeInt32","writeUint32","writeInt64","Number","writeUint64","writeFloat32","writeFloat64","getBufferIdentifier","Error","result","i","String","fromCharCode","__offset","bb_pos","vtable_offset","vtable","__union","t","bb","__string","opt_encoding","utf8bytes","subarray","UTF8_BYTES","decode","__union_with_string","o","__indirect","__vector","__vector_len","__has_identifier","ident","charCodeAt","createScalarList","listAccessor","listLength","ret","val","push","createObjList","unpack","Builder","opt_initial_size","initial_size","minalign","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","string_maps","text_encoder","TextEncoder","space","forceDefaults","dataBuffer","asUint8Array","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","TypeError","notNested","new_buf_size","nbb","set","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","j","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","startVector","elem_size","num_elems","alignment","endVector","createSharedString","s","Map","has","get","createString","utf8","encode","createObjectOffset","pack","createObjectOffsetList","list","createStructOffsetList","startFunc","slice","reverse","WebSocket","onmessage","event","buf","flatbuffers","data","peerChange","fbTopology","PeerChange","getRootAsPeerChange","handleChange","AddedConnection","AddedConnectionT","ControllerResponse","ControllerResponseT","ErrorT","Ok","OkT","PeerChangeT","PeerChangeType","RemovedConnection","RemovedConnectionT","Response","__init","getRootAsAddedConnection","getSizePrefixedRootAsAddedConnection","from","optionalEncoding","fromLocation","to","toLocation","startAddedConnection","builder","addFrom","fromOffset","addFromLocation","addTo","toOffset","addToLocation","endAddedConnection","createAddedConnection","unpackTo","_o","getRootAsControllerResponse","getSizePrefixedRootAsControllerResponse","responseType","NONE","response","startControllerResponse","addResponseType","addResponse","responseOffset","endControllerResponse","createControllerResponse","temp","unionToResponse","bind","getRootAsError","getSizePrefixedRootAsError","message","startError","addMessage","messageOffset","endError","createError","getRootAsOk","getSizePrefixedRootAsOk","startOk","endOk","createOk","type","accessor","index","getSizePrefixedRootAsPeerChange","currentState","currentStateLength","changeType","change","startPeerChange","addCurrentState","currentStateOffset","createCurrentStateVector","startCurrentStateVector","numElems","addChangeType","addChange","changeOffset","endPeerChange","createPeerChange","unionToPeerChangeType","getRootAsRemovedConnection","getSizePrefixedRootAsRemovedConnection","at","startRemovedConnection","addAt","atOffset","endRemovedConnection","createRemovedConnection","handleAddedConnection","added","fromAdded","toString","toAdded","fromConnection","id","location","toConnection","peers","currentLocation","locationHistory","timestamp","Date","now","connections","history","changeInfo","handleRemovedConnection","removed","fromRemoved","atRemoved","findIndex","connection","splice","reverseIndex","showConnections","peer","overlayDiv","document","getElementById","innerHTML","headerSection","createElement","classList","add","idLocation","textContent","appendChild","tableSection","headerRow","idHeader","locationHeader","forEach","row","idCell","locationCell","displayHistory","historyHTML","map","join","unpacked","e","console","error","onclick","cell","updateTable","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","d","definition","key","Object","defineProperty","enumerable","prop","prototype","hasOwnProperty","r","Symbol","toStringTag"],"sourceRoot":""}