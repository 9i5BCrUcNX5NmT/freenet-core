"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding =
  (this && this.__createBinding) ||
  (Object.create
    ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (
          !desc ||
          ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)
        ) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            },
          };
        }
        Object.defineProperty(o, k2, desc);
      }
    : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
var __setModuleDefault =
  (this && this.__setModuleDefault) ||
  (Object.create
    ? function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      }
    : function (o, v) {
        o["default"] = v;
      });
var __importStar =
  (this && this.__importStar) ||
  function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
      for (var k in mod)
        if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
  };
Object.defineProperty(exports, "__esModule", { value: true });
exports.OkT = exports.Ok = void 0;
const flatbuffers = __importStar(require("flatbuffers"));
class Ok {
  constructor() {
    this.bb = null;
    this.bb_pos = 0;
  }
  __init(i, bb) {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }
  static getRootAsOk(bb, obj) {
    return (obj || new Ok()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }
  static getSizePrefixedRootAsOk(bb, obj) {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new Ok()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }
  message(optionalEncoding) {
    const offset = this.bb.__offset(this.bb_pos, 4);
    return offset
      ? this.bb.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }
  static startOk(builder) {
    builder.startObject(1);
  }
  static addMessage(builder, messageOffset) {
    builder.addFieldOffset(0, messageOffset, 0);
  }
  static endOk(builder) {
    const offset = builder.endObject();
    return offset;
  }
  static createOk(builder, messageOffset) {
    Ok.startOk(builder);
    Ok.addMessage(builder, messageOffset);
    return Ok.endOk(builder);
  }
  unpack() {
    return new OkT(this.message());
  }
  unpackTo(_o) {
    _o.message = this.message();
  }
}
exports.Ok = Ok;
class OkT {
  constructor(message = null) {
    this.message = message;
  }
  pack(builder) {
    const message =
      this.message !== null ? builder.createString(this.message) : 0;
    return Ok.createOk(builder, message);
  }
}
exports.OkT = OkT;
//# sourceMappingURL=ok.js.map
