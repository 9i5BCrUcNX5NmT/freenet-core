"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.unionListToPeerChangeType =
  exports.unionToPeerChangeType =
  exports.PeerChangeType =
    void 0;
const added_connection_js_1 = require("../topology/added-connection.js");
const error_js_1 = require("../topology/error.js");
const removed_connection_js_1 = require("../topology/removed-connection.js");
var PeerChangeType;
(function (PeerChangeType) {
  PeerChangeType[(PeerChangeType["NONE"] = 0)] = "NONE";
  PeerChangeType[(PeerChangeType["AddedConnection"] = 1)] = "AddedConnection";
  PeerChangeType[(PeerChangeType["RemovedConnection"] = 2)] =
    "RemovedConnection";
  PeerChangeType[(PeerChangeType["Error"] = 3)] = "Error";
})((PeerChangeType = exports.PeerChangeType || (exports.PeerChangeType = {})));
function unionToPeerChangeType(type, accessor) {
  switch (PeerChangeType[type]) {
    case "NONE":
      return null;
    case "AddedConnection":
      return accessor(new added_connection_js_1.AddedConnection());
    case "RemovedConnection":
      return accessor(new removed_connection_js_1.RemovedConnection());
    case "Error":
      return accessor(new error_js_1.Error());
    default:
      return null;
  }
}
exports.unionToPeerChangeType = unionToPeerChangeType;
function unionListToPeerChangeType(type, accessor, index) {
  switch (PeerChangeType[type]) {
    case "NONE":
      return null;
    case "AddedConnection":
      return accessor(index, new added_connection_js_1.AddedConnection());
    case "RemovedConnection":
      return accessor(index, new removed_connection_js_1.RemovedConnection());
    case "Error":
      return accessor(index, new error_js_1.Error());
    default:
      return null;
  }
}
exports.unionListToPeerChangeType = unionListToPeerChangeType;
//# sourceMappingURL=peer-change-type.js.map
